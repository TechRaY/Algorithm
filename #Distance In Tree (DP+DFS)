//http://codeforces.com/problemset/problem/161/D

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

public class DistanceInTree {

	public static ArrayList<Integer>[] graph;
	public static long[][] dp;
	public static int m;
	public static long ans = 0;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		String[] parts = br.readLine().split(" ");
		int n = Integer.parseInt(parts[0]);
		m = Integer.parseInt(parts[1]);
		graph = new ArrayList[n];
		dp = new long[n][m + 1]; 

		for (int i = 0; i < n; i++)
			graph[i] = new ArrayList<>();

		for (int i = 0; i < n - 1; i++) {
			parts = br.readLine().split(" ");
			int u = Integer.parseInt(parts[0]) - 1;
			int v = Integer.parseInt(parts[1]) - 1;
			graph[u].add(v);
			graph[v].add(u);
		}

		for (int i = 0; i < n; i++)
			dp[i][0] = 1;

		dfs(0, 0);

		System.out.println(ans);
		br.close();
	}

	public static void dfs(int current, int parent) {
		for (int child : graph[current]) {

			if (child == parent)
				continue;

			dfs(child, current);

			for (int i = 0; i < m; i++)
				ans += dp[child][i] * dp[current][m - i - 1];

			for (int i = 0; i < m; i++)
				dp[current][i + 1] += dp[child][i];
		}
	}
}
