//https://www.codechef.com/SNCKPB16/problems/MMPROD/

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
    
        int t;
        int mod = 1000000007;
        t = sc.nextInt();
        
        while(t-->0)
        {
            long n,k;
            n = sc.nextInt();
            
            long arr[]=new long[(int)n];
            k = sc.nextInt();
            
            for(int i=0;i<n;i++)
            {
                arr[i] = sc.nextInt();
            }
            
            Arrays.sort(arr);
 
         
            
            long  start = 0,end = n-1,ans = 1,val = 0;
            
            if(arr[(int)n-1]<0 && k%2==1)                        // all hell negative
            {
                for(int i=0;i<k;i++)
                {
                    ans = (ans*arr[(int)n-1-i])%mod;
                }
            }
            else
            {
                while(k>0)
                {
                    if(k>1)
                    {
                        if(arr[(int)start]*arr[(int)start+1]>arr[(int)end]*arr[(int)end-1])
                        {
                       //     System.out.println(ans);
                            ans = (((arr[(int)start]*arr[(int)start+1])%mod)*ans)%mod;
                            start+=2;
                            k-=2;
                            
                        }
                        else
                        {
                          //  System.out.println(ans+"end "+arr[(int)end]);
                            ans = (ans*arr[(int)end])%mod;
                        //       System.out.println(arr[4]);
                            end--;
                            k--;
                        }
                    }
                    else
                    {
                        
                        ans = (ans*arr[(int)end])%mod;
                        end--;
                        k--;
                                                 

                    }
                }
            }
         ans = (ans+mod)%mod;
         
            System.out.println(ans);
        }
 
    }
}
